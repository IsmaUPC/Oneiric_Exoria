# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
  pull_request:
  release:
    types: [published]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    env:
      RELEASE_NAME: 7HD-Oneiric_Exoria
      GNUTARGET: default

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout      
      - uses: actions/checkout@develop

      # Runs a single command using the runners shell
      - name: Setup Release Version
        run: |
          echo "7HD-Oneiric_Exoria_$" >> $GITHUB_ENV
        shell: bash
        if: github.event_name == 'release' && github.event.action == 'published'

      - name: Setup Environment
        run: | 
          dir
          mkdir Build
          cd Build
          mkdir $
          cd ../../Oneiric_Exoria
          dir
      # Setup MSBuild.exe path if required
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Build Solution (MSVC16)
        run: |
          msbuild.exe Development.sln  /property:Configuration=Release
          copy /Y Build\Release\oneiric_exoria.exe build\$\oneiric_exoria.exe
        shell: cmd

      - name: Generate Artifacts
        run: |
          robocopy .\Output .\build\$\Output /S
          robocopy .\build\$ .\build\$\Output oneiric_exoria.exe /MOVE
          copy /Y .\README.md .\build\$\README.md
          copy /Y .\LICENSE .\build\$\LICENSE
          cd build
          7z a ./$.zip ./$
          dir
        shell: cmd
        
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: $.zip
          path: ./build/$.zip
        
      - name: Upload Artifact to Release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: $
        with:
            upload_url: $
            asset_path: ./build/$.zip
            asset_name: $.zip
            asset_content_type: application/zip
        if: github.event_name == 'release' && github.event.action == 'published'
